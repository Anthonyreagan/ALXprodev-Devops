#!/bin/bash

# Create directory for Pokémon data
mkdir -p pokemon_data

# List of Pokémon to fetch
pokemon_list=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")

# Base API URL
api_base="https://pokeapi.co/api/v2/pokemon"

# Log file for errors
error_log="pokemon_data/fetch_errors.log"
echo "Pokémon Fetch Error Log - $(date)" > "$error_log"

# Function to make API request with retries
fetch_pokemon_data() {
    local pokemon=$1
    local retries=3
    local delay=1
    local success=0
    
    for ((i=1; i<=retries; i++)); do
        echo "Attempt $i for $pokemon..."
        if curl -s -f "${api_base}/${pokemon}" -o "pokemon_data/${pokemon}.json"; then
            success=1
            break
        else
            echo "Attempt $i failed for $pokemon" >> "$error_log"
            if [ $i -lt $retries ]; then
                sleep $delay
                ((delay *= 2)) # Exponential backoff
            fi
        fi
    done

    if [ $success -eq 1 ]; then
        echo "Saved data to pokemon_data/${pokemon}.json ✅"
    else
        echo "Failed to fetch $pokemon after $retries attempts ❌" >> "$error_log"
        rm -f "pokemon_data/${pokemon}.json" 2>/dev/null
        echo "Failed to fetch $pokemon after $retries attempts ❌"
    fi
}

# Fetch data for each Pokémon
for pokemon in "${pokemon_list[@]}"; do
    echo "Fetching data for $pokemon..."
    fetch_pokemon_data "$pokemon"
    sleep 1 # Rate limiting delay between different Pokémon
done

echo "Processing complete. Check $error_log for any errors."